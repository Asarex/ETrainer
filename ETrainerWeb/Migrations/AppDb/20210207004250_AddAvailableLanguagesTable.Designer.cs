// <auto-generated />
using System;
using ETrainerWebAPI.Models.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ETrainerWebAPI.Migrations.AppDb
{
    [DbContext(typeof(ETrainerDbContext))]
    [Migration("20210207004250_AddAvailableLanguagesTable")]
    partial class AddAvailableLanguagesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ETrainerWebAPI.Models.Exercise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("ID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.ExerciseTranslatedInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ExerciseID")
                        .HasColumnType("int");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ExerciseID");

                    b.HasIndex("LanguageID");

                    b.ToTable("ExerciseTranslatedInfo");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.JoinModels.MuscleExercise", b =>
                {
                    b.Property<int>("MuscleID")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("int");

                    b.HasKey("MuscleID", "ExerciseID");

                    b.HasIndex("ExerciseID");

                    b.ToTable("MuscleExercise");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.JoinModels.WorkoutSettingsExcludeMuscles", b =>
                {
                    b.Property<int>("WorkoutSettingsID")
                        .HasColumnType("int");

                    b.Property<int>("MuscleID")
                        .HasColumnType("int");

                    b.HasKey("WorkoutSettingsID", "MuscleID");

                    b.HasIndex("MuscleID");

                    b.ToTable("WorkoutSettingsExcludeMuscles");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.JoinModels.WorkoutSettingsIncludeMuscles", b =>
                {
                    b.Property<int>("WorkoutSettingsID")
                        .HasColumnType("int");

                    b.Property<int>("MuscleID")
                        .HasColumnType("int");

                    b.HasKey("WorkoutSettingsID", "MuscleID");

                    b.HasIndex("MuscleID");

                    b.ToTable("WorkoutSettingsIncludeMuscles");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.Muscle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("ID");

                    b.ToTable("Muscles");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.MuscleTranslatedInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int?>("MuscleID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("MuscleID");

                    b.ToTable("MuscleTranslatedInfo");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.WorkoutSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("WorkoutSettingses");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.ExerciseTranslatedInfo", b =>
                {
                    b.HasOne("ETrainerWebAPI.Models.Exercise", "Exercise")
                        .WithMany("ExerciseTranslatedInfos")
                        .HasForeignKey("ExerciseID");

                    b.HasOne("ETrainerWebAPI.Models.Language", "Language")
                        .WithMany("ExerciseTranslatedInfos")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.JoinModels.MuscleExercise", b =>
                {
                    b.HasOne("ETrainerWebAPI.Models.Exercise", "Exercise")
                        .WithMany("MuscleExercises")
                        .HasForeignKey("ExerciseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETrainerWebAPI.Models.Muscle", "Muscle")
                        .WithMany("MuscleExercises")
                        .HasForeignKey("MuscleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.JoinModels.WorkoutSettingsExcludeMuscles", b =>
                {
                    b.HasOne("ETrainerWebAPI.Models.Muscle", "Muscle")
                        .WithMany("ExcludeFromSettings")
                        .HasForeignKey("MuscleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETrainerWebAPI.Models.WorkoutSettings", "WorkoutSettings")
                        .WithMany("WorkoutSettingsExcludeMuscles")
                        .HasForeignKey("WorkoutSettingsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Muscle");

                    b.Navigation("WorkoutSettings");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.JoinModels.WorkoutSettingsIncludeMuscles", b =>
                {
                    b.HasOne("ETrainerWebAPI.Models.Muscle", "Muscle")
                        .WithMany("IncludeInSettings")
                        .HasForeignKey("MuscleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETrainerWebAPI.Models.WorkoutSettings", "WorkoutSettings")
                        .WithMany("WorkoutSettingsIncludeMuscleses")
                        .HasForeignKey("WorkoutSettingsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Muscle");

                    b.Navigation("WorkoutSettings");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.MuscleTranslatedInfo", b =>
                {
                    b.HasOne("ETrainerWebAPI.Models.Language", "Language")
                        .WithMany("MuscleTranslatedInfos")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETrainerWebAPI.Models.Muscle", "Muscle")
                        .WithMany("MuscleTranslatedInfos")
                        .HasForeignKey("MuscleID");

                    b.Navigation("Language");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.Exercise", b =>
                {
                    b.Navigation("ExerciseTranslatedInfos");

                    b.Navigation("MuscleExercises");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.Language", b =>
                {
                    b.Navigation("ExerciseTranslatedInfos");

                    b.Navigation("MuscleTranslatedInfos");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.Muscle", b =>
                {
                    b.Navigation("ExcludeFromSettings");

                    b.Navigation("IncludeInSettings");

                    b.Navigation("MuscleExercises");

                    b.Navigation("MuscleTranslatedInfos");
                });

            modelBuilder.Entity("ETrainerWebAPI.Models.WorkoutSettings", b =>
                {
                    b.Navigation("WorkoutSettingsExcludeMuscles");

                    b.Navigation("WorkoutSettingsIncludeMuscleses");
                });
#pragma warning restore 612, 618
        }
    }
}
