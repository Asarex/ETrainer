// <auto-generated />
using ETrainerWeb.Models.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ETrainerWeb.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201021203103_AddRelationsBetweenModels")]
    partial class AddRelationsBetweenModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ETrainerWeb.Models.Exercise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ETrainerWeb.Models.JoinModels.MuscleExercise", b =>
                {
                    b.Property<int>("MuscleID")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("int");

                    b.HasKey("MuscleID", "ExerciseID");

                    b.HasIndex("ExerciseID");

                    b.ToTable("MuscleExercise");
                });

            modelBuilder.Entity("ETrainerWeb.Models.JoinModels.WorkoutSettingsExcludeMuscles", b =>
                {
                    b.Property<int>("WorkoutSettingsID")
                        .HasColumnType("int");

                    b.Property<int>("MuscleID")
                        .HasColumnType("int");

                    b.HasKey("WorkoutSettingsID", "MuscleID");

                    b.HasIndex("MuscleID");

                    b.ToTable("WorkoutSettingsExcludeMuscles");
                });

            modelBuilder.Entity("ETrainerWeb.Models.JoinModels.WorkoutSettingsIncludeMuscles", b =>
                {
                    b.Property<int>("WorkoutSettingsID")
                        .HasColumnType("int");

                    b.Property<int>("MuscleID")
                        .HasColumnType("int");

                    b.HasKey("WorkoutSettingsID", "MuscleID");

                    b.HasIndex("MuscleID");

                    b.ToTable("WorkoutSettingsIncludeMuscles");
                });

            modelBuilder.Entity("ETrainerWeb.Models.Muscle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("Muscles");
                });

            modelBuilder.Entity("ETrainerWeb.Models.WorkoutSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("WorkoutSettingses");
                });

            modelBuilder.Entity("ETrainerWeb.Models.JoinModels.MuscleExercise", b =>
                {
                    b.HasOne("ETrainerWeb.Models.Exercise", "Exercise")
                        .WithMany("MuscleExercises")
                        .HasForeignKey("ExerciseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETrainerWeb.Models.Muscle", "Muscle")
                        .WithMany("MuscleExercises")
                        .HasForeignKey("MuscleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETrainerWeb.Models.JoinModels.WorkoutSettingsExcludeMuscles", b =>
                {
                    b.HasOne("ETrainerWeb.Models.Muscle", "Muscle")
                        .WithMany("ExcludeFromSettings")
                        .HasForeignKey("MuscleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETrainerWeb.Models.WorkoutSettings", "WorkoutSettings")
                        .WithMany("WorkoutSettingsExcludeMuscles")
                        .HasForeignKey("WorkoutSettingsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETrainerWeb.Models.JoinModels.WorkoutSettingsIncludeMuscles", b =>
                {
                    b.HasOne("ETrainerWeb.Models.Muscle", "Muscle")
                        .WithMany("IncludeInSettings")
                        .HasForeignKey("MuscleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETrainerWeb.Models.WorkoutSettings", "WorkoutSettings")
                        .WithMany("WorkoutSettingsIncludeMuscleses")
                        .HasForeignKey("WorkoutSettingsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
