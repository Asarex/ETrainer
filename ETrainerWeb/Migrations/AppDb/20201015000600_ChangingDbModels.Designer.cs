// <auto-generated />
using System;
using ETrainerWeb.Models.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ETrainerWeb.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201015000600_ChangingDbModels")]
    partial class ChangingDbModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ETrainerWeb.Models.Exercise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ETrainerWeb.Models.Muscle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExerciseID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkoutSettingsID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutSettingsID1")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutSettingsID2")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutSettingsID3")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExerciseID");

                    b.HasIndex("WorkoutSettingsID");

                    b.HasIndex("WorkoutSettingsID1");

                    b.HasIndex("WorkoutSettingsID2");

                    b.HasIndex("WorkoutSettingsID3");

                    b.ToTable("Muscles");
                });

            modelBuilder.Entity("ETrainerWeb.Models.WorkoutSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WorkoutSettingses");
                });

            modelBuilder.Entity("ETrainerWeb.Models.Muscle", b =>
                {
                    b.HasOne("ETrainerWeb.Models.Exercise", null)
                        .WithMany("UseMuscles")
                        .HasForeignKey("ExerciseID");

                    b.HasOne("ETrainerWeb.Models.WorkoutSettings", null)
                        .WithMany("ExcludeExercises")
                        .HasForeignKey("WorkoutSettingsID");

                    b.HasOne("ETrainerWeb.Models.WorkoutSettings", null)
                        .WithMany("ExcludeMuscleses")
                        .HasForeignKey("WorkoutSettingsID1");

                    b.HasOne("ETrainerWeb.Models.WorkoutSettings", null)
                        .WithMany("IncludeExercises")
                        .HasForeignKey("WorkoutSettingsID2");

                    b.HasOne("ETrainerWeb.Models.WorkoutSettings", null)
                        .WithMany("IncludeMuscleses")
                        .HasForeignKey("WorkoutSettingsID3");
                });
#pragma warning restore 612, 618
        }
    }
}
